apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: lets-eat-ingress
  namespace: pairmate-prod
  annotations:
    # HTTP(SSL) 리다이렉션 강제
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # Ingress Controller를 nginx로 지정해줌
    kubernetes.io/ingress.class: "nginx"
    # 클라이언트 요청 크기 제한
    nginx.ingress.kubernetes.io/proxy-body-size: "20m"
    # 인증서 자동 발급 설정
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx # controller와 일치해야 함
  tls:
    - hosts:
        - lets-eat.store
      secretName: lets-eat-tls-secret #cert-manager가 자동 저장
  rules:
    - host: lets-eat.store
      http:
        paths:
          - path: /
            backend:
              service:
                name: frontend-service
                port:
                  number: 80
            pathType: Prefix
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: gateway-service
                port:
                  number: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: lets-eat-ingress
  namespace: pairmate-test
  annotations:
    # HTTP(SSL) 리다이렉션 강제
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # Ingress Controller를 nginx로 지정해줌
    kubernetes.io/ingress.class: "nginx"
    # 클라이언트 요청 크기 제한
    nginx.ingress.kubernetes.io/proxy-body-size: "20m"
    # 인증서 자동 발급 설정
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx # controller와 일치해야 함
  tls:
    - hosts:
        - test.lets-eat.store
      secretName: lets-eat-tls-secret #cert-manager가 자동 저장
  rules:
    - host: test.lets-eat.store
      http:
        paths:
          - path: /
            backend:
              service:
                name: frontend-service
                port:
                  number: 80
            pathType: Prefix
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: gateway-service
                port:
                  number: 8080

